[{"D:\\MyProjects\\react-material-admin\\src\\index.js":"1","D:\\MyProjects\\react-material-admin\\src\\serviceWorker.js":"2","D:\\MyProjects\\react-material-admin\\src\\context\\UserContext.js":"3","D:\\MyProjects\\react-material-admin\\src\\components\\App.js":"4","D:\\MyProjects\\react-material-admin\\src\\context\\LayoutContext.js":"5","D:\\MyProjects\\react-material-admin\\src\\themes\\index.js":"6","D:\\MyProjects\\react-material-admin\\src\\components\\Layout\\Layout.js":"7","D:\\MyProjects\\react-material-admin\\src\\pages\\login\\Login.js":"8","D:\\MyProjects\\react-material-admin\\src\\pages\\error\\Error.js":"9","D:\\MyProjects\\react-material-admin\\src\\themes\\default.js":"10","D:\\MyProjects\\react-material-admin\\src\\pages\\error\\styles.js":"11","D:\\MyProjects\\react-material-admin\\src\\pages\\login\\styles.js":"12","D:\\MyProjects\\react-material-admin\\src\\components\\Layout\\styles.js":"13","D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\Charts.js":"14","D:\\MyProjects\\react-material-admin\\src\\pages\\icons\\Icons.js":"15","D:\\MyProjects\\react-material-admin\\src\\pages\\maps\\Maps.js":"16","D:\\MyProjects\\react-material-admin\\src\\pages\\tables\\Tables.js":"17","D:\\MyProjects\\react-material-admin\\src\\pages\\notifications\\Notifications.js":"18","D:\\MyProjects\\react-material-admin\\src\\pages\\typography\\Typography.js":"19","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js":"20","D:\\MyProjects\\react-material-admin\\src\\components\\Header\\Header.js":"21","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js":"22","D:\\MyProjects\\react-material-admin\\src\\pages\\icons\\styles.js":"23","D:\\MyProjects\\react-material-admin\\src\\pages\\maps\\styles.js":"24","D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js":"25","D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js":"26","D:\\MyProjects\\react-material-admin\\src\\pages\\typography\\styles.js":"27","D:\\MyProjects\\react-material-admin\\src\\pages\\notifications\\styles.js":"28","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\mock.js":"29","D:\\MyProjects\\react-material-admin\\src\\components\\Widget\\Widget.js":"30","D:\\MyProjects\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js":"31","D:\\MyProjects\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js":"32","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js":"33","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js":"35","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\styles.js":"36","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"37","D:\\MyProjects\\react-material-admin\\src\\components\\Notification\\Notification.js":"38","D:\\MyProjects\\react-material-admin\\src\\components\\Header\\styles.js":"39","D:\\MyProjects\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js":"40","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\styles.js":"41","D:\\MyProjects\\react-material-admin\\src\\components\\Widget\\styles.js":"42","D:\\MyProjects\\react-material-admin\\src\\components\\PageTitle\\styles.js":"43","D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"44","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"45","D:\\MyProjects\\react-material-admin\\src\\components\\Notification\\styles.js":"46","D:\\MyProjects\\react-material-admin\\src\\components\\UserAvatar\\styles.js":"47"},{"size":896,"mtime":1649484283672,"results":"48","hashOfConfig":"49"},{"size":5083,"mtime":1649484283687,"results":"50","hashOfConfig":"49"},{"size":2053,"mtime":1649484283672,"results":"51","hashOfConfig":"49"},{"size":1787,"mtime":1649484283663,"results":"52","hashOfConfig":"49"},{"size":1444,"mtime":1649484283671,"results":"53","hashOfConfig":"49"},{"size":534,"mtime":1649484283688,"results":"54","hashOfConfig":"49"},{"size":4626,"mtime":1652030484028,"results":"55","hashOfConfig":"49"},{"size":9152,"mtime":1651410678102,"results":"56","hashOfConfig":"49"},{"size":1626,"mtime":1649484283676,"results":"57","hashOfConfig":"49"},{"size":3114,"mtime":1651413780842,"results":"58","hashOfConfig":"49"},{"size":1395,"mtime":1649484283676,"results":"59","hashOfConfig":"49"},{"size":3281,"mtime":1649484283681,"results":"60","hashOfConfig":"49"},{"size":710,"mtime":1649484283664,"results":"61","hashOfConfig":"49"},{"size":5782,"mtime":1649513342008,"results":"62","hashOfConfig":"49"},{"size":391397,"mtime":1651413658333,"results":"63","hashOfConfig":"49"},{"size":900,"mtime":1651995814260,"results":"64","hashOfConfig":"49"},{"size":2146,"mtime":1649484283686,"results":"65","hashOfConfig":"49"},{"size":9133,"mtime":1651414971666,"results":"66","hashOfConfig":"49"},{"size":2378,"mtime":1652159782350,"results":"67","hashOfConfig":"49"},{"size":16569,"mtime":1651423697233,"results":"68","hashOfConfig":"49"},{"size":10270,"mtime":1651409964520,"results":"69","hashOfConfig":"49"},{"size":4452,"mtime":1651999082041,"results":"70","hashOfConfig":"49"},{"size":812,"mtime":1649484283680,"results":"71","hashOfConfig":"49"},{"size":178,"mtime":1649484283682,"results":"72","hashOfConfig":"49"},{"size":1396,"mtime":1649484283673,"results":"73","hashOfConfig":"49"},{"size":1909,"mtime":1649484283673,"results":"74","hashOfConfig":"49"},{"size":389,"mtime":1649484283686,"results":"75","hashOfConfig":"49"},{"size":1943,"mtime":1649484283685,"results":"76","hashOfConfig":"49"},{"size":4288,"mtime":1649484283675,"results":"77","hashOfConfig":"49"},{"size":2581,"mtime":1649484283670,"results":"78","hashOfConfig":"49"},{"size":447,"mtime":1649484283665,"results":"79","hashOfConfig":"49"},{"size":3971,"mtime":1649504812300,"results":"80","hashOfConfig":"49"},{"size":902,"mtime":1649484283667,"results":"81","hashOfConfig":"49"},{"size":3929,"mtime":1651424000888,"results":"82","hashOfConfig":"49"},{"size":1323,"mtime":1649484283675,"results":"83","hashOfConfig":"49"},{"size":1363,"mtime":1649484283669,"results":"84","hashOfConfig":"49"},{"size":4589,"mtime":1649484283668,"results":"85","hashOfConfig":"49"},{"size":3413,"mtime":1649484283664,"results":"86","hashOfConfig":"49"},{"size":4043,"mtime":1649484283664,"results":"87","hashOfConfig":"49"},{"size":620,"mtime":1649484283669,"results":"88","hashOfConfig":"49"},{"size":3000,"mtime":1649484283675,"results":"89","hashOfConfig":"49"},{"size":1015,"mtime":1649484283670,"results":"90","hashOfConfig":"49"},{"size":482,"mtime":1649484283665,"results":"91","hashOfConfig":"49"},{"size":1075,"mtime":1649484283674,"results":"92","hashOfConfig":"49"},{"size":1474,"mtime":1649484283668,"results":"93","hashOfConfig":"49"},{"size":1040,"mtime":1649484283665,"results":"94","hashOfConfig":"49"},{"size":291,"mtime":1649484283670,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"dkdpri",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\MyProjects\\react-material-admin\\src\\index.js",[],["194","195"],"D:\\MyProjects\\react-material-admin\\src\\serviceWorker.js",[],"D:\\MyProjects\\react-material-admin\\src\\context\\UserContext.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\App.js",[],"D:\\MyProjects\\react-material-admin\\src\\context\\LayoutContext.js",[],"D:\\MyProjects\\react-material-admin\\src\\themes\\index.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Layout\\Layout.js",["196"],"D:\\MyProjects\\react-material-admin\\src\\pages\\login\\Login.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\error\\Error.js",[],"D:\\MyProjects\\react-material-admin\\src\\themes\\default.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\error\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\login\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Layout\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\Charts.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\icons\\Icons.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\maps\\Maps.js",["197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nconst BasicMap = withScriptjs(\r\n  withGoogleMap(() => (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{\r\n        lat: parseFloat(-37.813179),\r\n        lng: parseFloat(144.950259),\r\n      }}\r\n    >\r\n      <Marker position={{ lat: -37.813179, lng: 144.950259 }} />\r\n    </GoogleMap>\r\n  )),\r\n);\r\n\r\nexport default function Maps() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" minWidth={500} height={750}>\r\n              <iframe src=\"http://127.0.0.1:5501/\" />\r\n            </ResponsiveContainer>\r\n  );\r\n}\r\n","D:\\MyProjects\\react-material-admin\\src\\pages\\tables\\Tables.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\notifications\\Notifications.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\typography\\Typography.js",["210","211","212","213","214","215","216","217","218","219","220"],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js",["221","222","223","224","225","226","227","228","229"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport axios from 'axios';\r\n\r\nconst mainChartData = getMainChartData();\r\n\r\nexport default function Dashboard(props) {\r\n\r\n  const [predictions, setPredictions] = React.useState(null);\r\n  const [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  React.useEffect(()=>{\r\n    axios.get(`http://127.0.0.1:5000/`)\r\n      .then(response => {\r\n        console.log(response.data[\"prediction\"]);\r\n        setPredictions(response.data[\"prediction\"]);\r\n      })\r\n  }, []);\r\n  // var data = componentDidMount();\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  if (!predictions) {\r\n    return <>Loading</>;\r\n  } else {\r\n    console.log(predictions);\r\n    var PieChartData = [\r\n      { name: \"Day 1\", value: predictions[1]-predictions[0], color: \"primary\" },\r\n      { name: \"Day 2\", value: predictions[2]-predictions[1], color: \"secondary\" },\r\n      { name: \"Day 3\", value: predictions[3]-predictions[2], color: \"warning\" },\r\n      { name: \"Day 4\", value: predictions[4]-predictions[3], color: \"success\" },\r\n    ];\r\n\r\n    // local\r\n\r\n    return (\r\n      <>\r\n        <Grid container spacing={4}>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget\r\n              title=\"Live Total Cases\"\r\n              upperTitle\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <div className={classes.visitsNumberContainer}>\r\n                <Grid container item alignItems={\"center\"}>\r\n                  <Grid item xs={6}>\r\n                    <Typography  variant=\"h5\" weight=\"low\" noWrap>\r\n                    {predictions[0]}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <LineChart\r\n                      width={100}\r\n                      height={30}\r\n                      data={[\r\n                        { value: 10 },\r\n                        { value: 15 },\r\n                        { value: 10 },\r\n                        { value: 17 },\r\n                        { value: 18 },\r\n                      ]}\r\n                    >\r\n                      <Line\r\n                        type=\"natural\"\r\n                        dataKey=\"value\"\r\n                        stroke={theme.palette.success.main}\r\n                        strokeWidth={2}\r\n                        dot={false}\r\n                      />\r\n                    </LineChart>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={4}>\r\n                  <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                    Tested\r\n                  </Typography>\r\n                  <Typography size=\"md\">860</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                    Deaths\r\n                  </Typography>\r\n                  <Typography size=\"md\">32</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                    +ve Rate\r\n                  </Typography>\r\n                  <Typography size=\"md\">0.58%</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget title=\"Next Days Prediction\" upperTitle className={classes.card}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <ResponsiveContainer width=\"100%\" height={144}>\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={PieChartData}\r\n                        innerRadius={30}\r\n                        outerRadius={50}\r\n                        dataKey=\"value\"\r\n                      >\r\n                        {PieChartData.map((entry, index) => (\r\n                          <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={theme.palette[entry.color].main}\r\n                          />\r\n                        ))}\r\n                      </Pie>\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div className={classes.pieChartLegendWrapper}>\r\n                    {PieChartData.map(({ name, value, color }, index) => (\r\n                      <div key={color} className={classes.legendItemContainer}>\r\n                        <Dot color={color} />\r\n                        <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                          &nbsp;{name}&nbsp;\r\n                        </Typography>\r\n                        <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                          &nbsp;{value}\r\n                        </Typography>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={8} sm={6} xs={12}>\r\n            <Widget\r\n              title=\"App Performance\"\r\n              upperTitle\r\n              className={classes.card}\r\n              bodyClass={classes.fullHeightBody}\r\n            >\r\n              <div className={classes.performanceLegendWrapper}>\r\n                <div className={classes.legendElement}>\r\n                  <Dot color=\"warning\" />\r\n                  <Typography\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                    className={classes.legendElementText}\r\n                  >\r\n                    Integration\r\n                  </Typography>\r\n                </div>\r\n                <div className={classes.legendElement}>\r\n                  <Dot color=\"primary\" />\r\n                  <Typography\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                    className={classes.legendElementText}\r\n                  >\r\n                    SDK\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <div className={classes.progressSection}>\r\n                <Typography\r\n                  size=\"md\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.progressSectionTitle}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n                <LinearProgress\r\n                  variant=\"determinate\"\r\n                  value={77}\r\n                  classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                  className={classes.progress}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Typography\r\n                  size=\"md\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.progressSectionTitle}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n                <LinearProgress\r\n                  variant=\"determinate\"\r\n                  value={73}\r\n                  classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                  className={classes.progress}\r\n                />\r\n              </div>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={8} sm={6} xs={12}>\r\n            <Widget\r\n              title=\"Server Overview\"\r\n              upperTitle\r\n              className={classes.card}\r\n              bodyClass={classes.fullHeightBody}\r\n            >\r\n              <div className={classes.serverOverviewElement}>\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.serverOverviewElementText}\r\n                  noWrap\r\n                >\r\n                  60% / 37°С / 3.3 Ghz\r\n                </Typography>\r\n                <div className={classes.serverOverviewElementChartWrapper}>\r\n                  <ResponsiveContainer height={50} width=\"99%\">\r\n                    <AreaChart data={getRandomData(10)}>\r\n                      <Area\r\n                        type=\"natural\"\r\n                        dataKey=\"value\"\r\n                        stroke={theme.palette.secondary.main}\r\n                        fill={theme.palette.secondary.light}\r\n                        strokeWidth={2}\r\n                        fillOpacity=\"0.25\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n              <div className={classes.serverOverviewElement}>\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.serverOverviewElementText}\r\n                  noWrap\r\n                >\r\n                  54% / 31°С / 3.3 Ghz\r\n                </Typography>\r\n                <div className={classes.serverOverviewElementChartWrapper}>\r\n                  <ResponsiveContainer height={50} width=\"99%\">\r\n                    <AreaChart data={getRandomData(10)}>\r\n                      <Area\r\n                        type=\"natural\"\r\n                        dataKey=\"value\"\r\n                        stroke={theme.palette.primary.main}\r\n                        fill={theme.palette.primary.light}\r\n                        strokeWidth={2}\r\n                        fillOpacity=\"0.25\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n              <div className={classes.serverOverviewElement}>\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.serverOverviewElementText}\r\n                  noWrap\r\n                >\r\n                  57% / 21°С / 3.3 Ghz\r\n                </Typography>\r\n                <div className={classes.serverOverviewElementChartWrapper}>\r\n                  <ResponsiveContainer height={50} width=\"99%\">\r\n                    <AreaChart data={getRandomData(10)}>\r\n                      <Area\r\n                        type=\"natural\"\r\n                        dataKey=\"value\"\r\n                        stroke={theme.palette.warning.main}\r\n                        fill={theme.palette.warning.light}\r\n                        strokeWidth={2}\r\n                        fillOpacity=\"0.25\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n            </Widget>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={750}>\r\n              <iframe src=\"https://infinitumkiran.github.io/covidcases/\" />\r\n            </ResponsiveContainer>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    Daily Line Chart\r\n                  </Typography>\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"warning\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        Tablet\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        Mobile\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        Desktop\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              }\r\n            >\r\n              <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n                <ComposedChart\r\n                  margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                  data={mainChartData}\r\n                >\r\n                  <YAxis\r\n                    ticks={[0, 2500, 5000, 7500]}\r\n                    tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                    stroke={theme.palette.text.hint + \"80\"}\r\n                    tickLine={false}\r\n                  />\r\n                  <XAxis\r\n                    tickFormatter={i => i + 1}\r\n                    tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                    stroke={theme.palette.text.hint + \"80\"}\r\n                    tickLine={false}\r\n                  />\r\n                  <Area\r\n                    type=\"natural\"\r\n                    dataKey=\"desktop\"\r\n                    fill={theme.palette.background.light}\r\n                    strokeWidth={0}\r\n                    activeDot={false}\r\n                  />\r\n                  <Line\r\n                    type=\"natural\"\r\n                    dataKey=\"mobile\"\r\n                    stroke={theme.palette.primary.main}\r\n                    strokeWidth={2}\r\n                    dot={false}\r\n                    activeDot={false}\r\n                  />\r\n                  <Line\r\n                    type=\"linear\"\r\n                    dataKey=\"tablet\"\r\n                    stroke={theme.palette.warning.main}\r\n                    strokeWidth={2}\r\n                    dot={{\r\n                      stroke: theme.palette.warning.dark,\r\n                      strokeWidth: 2,\r\n                      fill: theme.palette.warning.main,\r\n                    }}\r\n                  />\r\n                </ComposedChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n          {mock.bigStat.map(stat => (\r\n            <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n              <BigStat {...stat} />\r\n            </Grid>\r\n          ))}\r\n\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\MyProjects\\react-material-admin\\src\\components\\Header\\Header.js",["230","231"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Covid 19 Global Protect XE\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n          <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Kiran\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://infinitumkiran.github.io/portfoliowebsite/\"\r\n            >\r\n              My portfolio\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\icons\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\maps\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\typography\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\notifications\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\mock.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Widget\\Widget.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Notification\\Notification.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Header\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Widget\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\PageTitle\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\Notification\\styles.js",[],"D:\\MyProjects\\react-material-admin\\src\\components\\UserAvatar\\styles.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":32,"column":8,"nodeType":"238","messageId":"239","endLine":32,"endColumn":13},{"ruleId":"236","severity":1,"message":"240","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":16},{"ruleId":"236","severity":1,"message":"241","line":11,"column":3,"nodeType":"238","messageId":"239","endLine":11,"endColumn":12},{"ruleId":"236","severity":1,"message":"242","line":12,"column":3,"nodeType":"238","messageId":"239","endLine":12,"endColumn":12},{"ruleId":"236","severity":1,"message":"243","line":13,"column":3,"nodeType":"238","messageId":"239","endLine":13,"endColumn":7},{"ruleId":"236","severity":1,"message":"244","line":14,"column":3,"nodeType":"238","messageId":"239","endLine":14,"endColumn":7},{"ruleId":"236","severity":1,"message":"245","line":15,"column":3,"nodeType":"238","messageId":"239","endLine":15,"endColumn":11},{"ruleId":"236","severity":1,"message":"246","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":6},{"ruleId":"236","severity":1,"message":"247","line":17,"column":3,"nodeType":"238","messageId":"239","endLine":17,"endColumn":7},{"ruleId":"236","severity":1,"message":"248","line":18,"column":3,"nodeType":"238","messageId":"239","endLine":18,"endColumn":8},{"ruleId":"236","severity":1,"message":"249","line":19,"column":3,"nodeType":"238","messageId":"239","endLine":19,"endColumn":8},{"ruleId":"236","severity":1,"message":"250","line":24,"column":7,"nodeType":"238","messageId":"239","endLine":24,"endColumn":15},{"ruleId":"236","severity":1,"message":"251","line":39,"column":7,"nodeType":"238","messageId":"239","endLine":39,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":43,"column":15,"nodeType":"254","endLine":43,"endColumn":54},{"ruleId":"236","severity":1,"message":"240","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":16},{"ruleId":"236","severity":1,"message":"241","line":6,"column":3,"nodeType":"238","messageId":"239","endLine":6,"endColumn":12},{"ruleId":"236","severity":1,"message":"242","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":12},{"ruleId":"236","severity":1,"message":"243","line":8,"column":3,"nodeType":"238","messageId":"239","endLine":8,"endColumn":7},{"ruleId":"236","severity":1,"message":"244","line":9,"column":3,"nodeType":"238","messageId":"239","endLine":9,"endColumn":7},{"ruleId":"236","severity":1,"message":"245","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":11},{"ruleId":"236","severity":1,"message":"246","line":11,"column":3,"nodeType":"238","messageId":"239","endLine":11,"endColumn":6},{"ruleId":"236","severity":1,"message":"247","line":12,"column":3,"nodeType":"238","messageId":"239","endLine":12,"endColumn":7},{"ruleId":"236","severity":1,"message":"248","line":13,"column":3,"nodeType":"238","messageId":"239","endLine":13,"endColumn":8},{"ruleId":"236","severity":1,"message":"249","line":14,"column":3,"nodeType":"238","messageId":"239","endLine":14,"endColumn":8},{"ruleId":"252","severity":1,"message":"253","line":95,"column":15,"nodeType":"254","endLine":95,"endColumn":54},{"ruleId":"236","severity":1,"message":"255","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":9},{"ruleId":"236","severity":1,"message":"256","line":6,"column":3,"nodeType":"238","messageId":"239","endLine":6,"endColumn":16},{"ruleId":"236","severity":1,"message":"257","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":11},{"ruleId":"236","severity":1,"message":"258","line":8,"column":3,"nodeType":"238","messageId":"239","endLine":8,"endColumn":9},{"ruleId":"236","severity":1,"message":"259","line":31,"column":8,"nodeType":"238","messageId":"239","endLine":31,"endColumn":17},{"ruleId":"236","severity":1,"message":"260","line":34,"column":8,"nodeType":"238","messageId":"239","endLine":34,"endColumn":13},{"ruleId":"236","severity":1,"message":"261","line":43,"column":10,"nodeType":"238","messageId":"239","endLine":43,"endColumn":24},{"ruleId":"236","severity":1,"message":"262","line":43,"column":26,"nodeType":"238","messageId":"239","endLine":43,"endColumn":43},{"ruleId":"252","severity":1,"message":"253","line":321,"column":15,"nodeType":"254","endLine":321,"endColumn":76},{"ruleId":"236","severity":1,"message":"263","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":7},{"ruleId":"236","severity":1,"message":"258","line":27,"column":29,"nodeType":"238","messageId":"239","endLine":27,"endColumn":35},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'Icons' is defined but never used.","Identifier","unusedVar","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'BasicMap' is assigned a value but never used.","'classes' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'PageTitle' is defined but never used.","'Table' is defined but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]